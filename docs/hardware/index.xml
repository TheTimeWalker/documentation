<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configuration on</title><link>https://thetimewalker.github.io/documentation/docs/hardware/</link><description>Recent content in Configuration on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://thetimewalker.github.io/documentation/docs/hardware/index.xml" rel="self" type="application/rss+xml"/><item><title>Dock</title><link>https://thetimewalker.github.io/documentation/docs/hardware/dock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://thetimewalker.github.io/documentation/docs/hardware/dock/</guid><description>The YIO Dock charges the remote and functions as an IR receiver and blaster.
YIO Dock Hardware USB-C connector (works with all chargers that adhering the USB-C Standard) IR-Receiver (located at the top, let you learn IR codes) 4 IR LEDs (can emit RAW &amp;amp; Pronto HEX IR codes) headphone jack (IR Extender can be connected in parallel to this Port) Powering the YIO dock The YIO dock has an USB-C connector and works with power supplies adhering to the USB-C standard.</description></item><item><title>Remote</title><link>https://thetimewalker.github.io/documentation/docs/hardware/remote/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://thetimewalker.github.io/documentation/docs/hardware/remote/</guid><description>The YIO remotes is designed as HID for all kind of SmartHome backend Systems and SmartHome devices. More Information about supported Integrations can be found in the menu.
YIO Remote Hardware based on a Raspberry Pi Zero W (used as mainboard and provides connections via Wi-Fi and Bluetooth) 13 customizable physical buttons (2 different functions at each button can be assigned) 3.5&amp;quot; high resolution capacitive touchsreen (480x800px resolution) ambient light sensor (detects you light scenario and dims / brightens the display) battery monitoring (charge, health &amp;amp; voltage) custom designed housing (CNC milled, sandblasted and anodized) gesture sensor (detects you and switches on the display) haptic feedback motor (gives vibrating feedback) proximity sensor (detects proximity and switches on the display) YIO Remote Software The Project is based on a custom buildroot system with UI designed and programmed in Qt Open Source.</description></item></channel></rss>